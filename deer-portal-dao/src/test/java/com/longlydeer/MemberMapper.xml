<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longlydeer.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.longlydeer.Member" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="is_enabled" property="isEnabled" jdbcType="BIT" />
    <result column="is_locked" property="isLocked" jdbcType="BIT" />
    <result column="login_failure_count" property="loginFailureCount" jdbcType="INTEGER" />
    <result column="locked_date" property="lockedDate" jdbcType="TIMESTAMP" />
    <result column="register_ip" property="registerIp" jdbcType="VARCHAR" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="login_date" property="loginDate" jdbcType="TIMESTAMP" />
    <result column="recommender" property="recommender" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_date, modify_date, username, email, password, phone, is_enabled, is_locked, 
    login_failure_count, locked_date, register_ip, login_ip, login_date, recommender
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.longlydeer.Member" >
    insert into member (id, create_date, modify_date, 
      username, email, password, 
      phone, is_enabled, is_locked, 
      login_failure_count, locked_date, register_ip, 
      login_ip, login_date, recommender
      )
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{isEnabled,jdbcType=BIT}, #{isLocked,jdbcType=BIT}, 
      #{loginFailureCount,jdbcType=INTEGER}, #{lockedDate,jdbcType=TIMESTAMP}, #{registerIp,jdbcType=VARCHAR}, 
      #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, #{recommender,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.longlydeer.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="isEnabled != null" >
        is_enabled,
      </if>
      <if test="isLocked != null" >
        is_locked,
      </if>
      <if test="loginFailureCount != null" >
        login_failure_count,
      </if>
      <if test="lockedDate != null" >
        locked_date,
      </if>
      <if test="registerIp != null" >
        register_ip,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="loginDate != null" >
        login_date,
      </if>
      <if test="recommender != null" >
        recommender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null" >
        #{isEnabled,jdbcType=BIT},
      </if>
      <if test="isLocked != null" >
        #{isLocked,jdbcType=BIT},
      </if>
      <if test="loginFailureCount != null" >
        #{loginFailureCount,jdbcType=INTEGER},
      </if>
      <if test="lockedDate != null" >
        #{lockedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null" >
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recommender != null" >
        #{recommender,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longlydeer.Member" >
    update member
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null" >
        is_enabled = #{isEnabled,jdbcType=BIT},
      </if>
      <if test="isLocked != null" >
        is_locked = #{isLocked,jdbcType=BIT},
      </if>
      <if test="loginFailureCount != null" >
        login_failure_count = #{loginFailureCount,jdbcType=INTEGER},
      </if>
      <if test="lockedDate != null" >
        locked_date = #{lockedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null" >
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recommender != null" >
        recommender = #{recommender,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longlydeer.Member" >
    update member
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      is_enabled = #{isEnabled,jdbcType=BIT},
      is_locked = #{isLocked,jdbcType=BIT},
      login_failure_count = #{loginFailureCount,jdbcType=INTEGER},
      locked_date = #{lockedDate,jdbcType=TIMESTAMP},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      recommender = #{recommender,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>